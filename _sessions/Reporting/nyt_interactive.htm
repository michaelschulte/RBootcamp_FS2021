<!DOCTYPE html>
<!-- saved from url=(0056)http://timelyportfolio.github.io/rCharts_nyt_home_price/ -->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <title>rCharts NYT Interactive Home Price</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width">
  <link rel="icon" type="image/png" href="http://timelyportfolio.github.io/rCharts_nyt_home_price/favicon.ico">
  <style>
  body {
    padding-top: 60px;
    padding-bottom: 40px;
  }
  </style>
  
<link href="./nyt_interactive_files/bootstrap.no-responsive.no-icons.min.css" rel="stylesheet">
<!-- <link rel="stylesheet" href="/css/bootstrap.min.css"> -->
<link rel="stylesheet" href="./nyt_interactive_files/font-awesome.css">
  <link rel="stylesheet" href="./nyt_interactive_files/bootstrap-responsive.min.css">
  
  <link rel="stylesheet" href="./nyt_interactive_files/main.css">
  <link rel="stylesheet" href="./nyt_interactive_files/twitter-bootstrap.css">
  <script src="./nyt_interactive_files/modernizr-2.6.1-respond-1.1.0.min.js"></script>
  <script src="./nyt_interactive_files/jquery.min.js"></script>
  <script>window.jQuery || document.write('<script src="libraries/frameworks/bootstrap/js/vendor/jquery-1.8.2.min.js"><\/script>')</script>
    <link rel="stylesheet" href="./nyt_interactive_files/base.css">
<link rel="stylesheet" href="./nyt_interactive_files/css">
<link rel="stylesheet" href="./nyt_interactive_files/css(1)">

  <script src="./nyt_interactive_files/d3.v3.js"></script>
<script src="./nyt_interactive_files/queue.js"></script>

</head>
<body><div id="StayFocusd-infobar" style="display:none;">
    <img src="chrome-extension://laankejkbhbdhmipfmgcngdelahlfoji/common/img/eye_19x19_red.png">
    <span id="StayFocusd-infobar-msg"></span>
    <span id="StayFocusd-infobar-links">
        <a id="StayFocusd-infobar-never-show">hide forever</a>&nbsp;&nbsp;|&nbsp;&nbsp;
        <a id="StayFocusd-infobar-hide">hide once</a>
    </span>
</div>
   <!--[if lt IE 7]>
     <p class="chromeframe">You are using an outdated browser. 
       <a href="http://browsehappy.com/">Upgrade your browser today</a> or 
       <a href="http://www.google.com/chromeframe/?redirect=true"> 
         install Google Chrome Frame
       </a> to better experience this site.
    </p>
   <![endif]-->
   <!-- Ref: http://twitter.github.com/bootstrap/examples/hero.html -->
   
    <div class="container">
      
<style>
body{
  font-family: 'Oxygen', sans-serif;
  font-size: 16px;
  line-height: 24px;
}

h1,h2,h3,h4 {
  font-family: 'Raleway', sans-serif;
}

.container { width: 1000px; }
h3 {
  background-color: #D4DAEC;
  text-indent: 100px; 
}
h4 {
  text-indent: 100px;
}

g-table-intro h4 {
  text-indent: 0px;
}
</style>

<p><a href="https://github.com/timelyportfolio/rCharts_nyt_home_price"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub"></a></p>

<h1>Great NYT Interactive -- Now Reusable with rCharts</h1>


<p><br></p>

<h3>Disclaimer and Attribution</h3>

<p><strong>I claim absolutely no credit for this visualization, which I consider one of the most best I have ever seen.  All credit belongs to the <a href="http://www.nytimes.com/interactive/2011/05/31/business/economy/case-shiller-index.html">original source</a>.  If anybody believes this to be not fair use, I will take it down immediately.  I am implicitly assuming approval for this fork due to the <a href="http://datastori.es/data-stories-22-nyt-graphics-and-d3-with-mike-bostock-and-shan-carter/">data.stories interview</a>.</strong> </p>


<p><br></p>

<h3>Another Favorite from NYT</h3>

<p>I think we all know the <a href="http://blog.visual.ly/10-things-you-can-learn-from-the-new-york-times-data-visualizations/">data visualization team at NYT</a> is simply amazing.  Earlier this year in my post <a href="http://timelyportfolio.blogspot.com/2013/04/d3-r-with-rcharts-and-slidify.html">d3 &lt;- R with rCharts and slidify</a> I adapted and recreated the <a href="http://www.nytimes.com/interactive/2012/11/02/us/politics/paths-to-the-white-house.html">512 Paths to the White House</a> to work with <code>R</code> data through <a href="http://rcharts.io/site"><code>rCharts</code></a>.  Unfortunately, I was not creative enough to think of other data sets to plug into the visualization.  When Scott Murray tweeted, </p>

<p><br></p>

<blockquote class="twitter-tweet"><p>Over at <a href="https://twitter.com/nytgraphics">@nytgraphics</a>, <a href="https://twitter.com/KevinQ">@KevinQ</a> and <a href="https://twitter.com/shancarter">@shancarter</a> really know how to wiggle a baseline. <a href="http://t.co/gS9gHrSLIu">http://t.co/gS9gHrSLIu</a></p>â€” Scott Murray (@alignedleft) <a href="https://twitter.com/alignedleft/statuses/349647895122804738">June 25, 2013</a></blockquote>

<script async="" src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p><br></p>

<p>I immediately knew the <a href="http://www.nytimes.com/interactive/2011/05/31/business/economy/case-shiller-index.html">Case Shiller Home Price Index visualization</a> would be perfect for reuse with any cumulative growth time series data.   This is a bit of a hack of <code>rCharts</code> and should not be considered best practices, but it is a demonstration of the very flexible design of the package.  In the spirit of this <a href="http://datastori.es/data-stories-23-inspiration-or-plagiarism/">discussion</a>, I did not want to just copy entirely.  I was able to add a couple key innovations to the visualization:</p>

<ul>
<li>Generalize the d3 code a little more to adapt to the data</li>
<li>Build in <code>R</code> with <code>rCharts</code> to make it reusable.</li>
</ul>


<p><br></p>

<h3>Reusable Version in rCharts</h3>

<p>As I mentioned above, this visualization works well with any cumulative growth time series, so let's apply it to the <code>managers</code> dataset supplied by the <code>PerformanceAnalytics</code> package.</p>

<h4>Get Data and Transform</h4>

<pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><code class="r"><span class="com">#get the data and convert to a format that we would expect from melted xts</span></code></li><li class="L1"><code class="r"><span class="com">#will be typical</span></code></li><li class="L2"><code class="r"><span class="com">#also original only uses a single value (val) and not other </span></code></li><li class="L3"><code class="r"><span class="kwd">require</span><span class="pun">(</span><span class="pln">reshape2</span><span class="pun">)</span></code></li><li class="L4"><code class="r"><span class="kwd">require</span><span class="pun">(</span><span class="typ">PerformanceAnalytics</span><span class="pun">)</span></code></li><li class="L5"><code class="r"></code></li><li class="L6"><code class="r"><span class="pln">data</span><span class="pun">(</span><span class="pln">managers</span><span class="pun">)</span></code></li><li class="L7"><code class="r"><span class="pln">managers </span><span class="pun">&lt;-</span><span class="pln"> na</span><span class="pun">.</span><span class="pln">omit</span><span class="pun">(</span><span class="pln">managers</span><span class="pun">)</span></code></li><li class="L8"><code class="r"><span class="pln">managers</span><span class="pun">.</span><span class="pln">melt </span><span class="pun">&lt;-</span><span class="pln"> melt</span><span class="pun">(</span></code></li><li class="L9"><code class="r"><span class="pln">  data</span><span class="pun">.</span><span class="pln">frame</span><span class="pun">(</span><span class="pln"> index</span><span class="pun">(</span><span class="pln"> managers </span><span class="pun">),</span><span class="pln"> coredata</span><span class="pun">(</span><span class="pln">cumprod</span><span class="pun">(</span><span class="pln"> managers</span><span class="pun">+</span><span class="lit">1</span><span class="pln"> </span><span class="pun">)*</span><span class="lit">100</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">),</span></code></li><li class="L0"><code class="r"><span class="pln">  id</span><span class="pun">.</span><span class="pln">vars </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span></code></li><li class="L1"><code class="r"><span class="pun">)</span></code></li><li class="L2"><code class="r"><span class="pln">colnames</span><span class="pun">(</span><span class="pln">managers</span><span class="pun">.</span><span class="pln">melt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;-</span><span class="pln"> c</span><span class="pun">(</span><span class="str">"date"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"manager"</span><span class="pun">,</span><span class="str">"val"</span><span class="pun">)</span></code></li><li class="L3"><code class="r"><span class="pln">managers</span><span class="pun">.</span><span class="pln">melt</span><span class="pun">[,</span><span class="str">"date"</span><span class="pun">]</span><span class="pln"> </span><span class="pun">&lt;-</span><span class="pln"> format</span><span class="pun">(</span><span class="pln">managers</span><span class="pun">.</span><span class="pln">melt</span><span class="pun">[,</span><span class="str">"date"</span><span class="pun">],</span><span class="pln">format </span><span class="pun">=</span><span class="pln"> </span><span class="str">"%Y-%m-%d"</span><span class="pun">)</span></code></li></ol></pre>

<h4>Draw The Graph</h4>

<pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><code class="r"><span class="kwd">require</span><span class="pun">(</span><span class="pln">rCharts</span><span class="pun">)</span></code></li><li class="L1"><code class="r"><span class="pln">p2 </span><span class="pun">&lt;-</span><span class="pln"> rCharts$new</span><span class="pun">()</span></code></li><li class="L2"><code class="r"><span class="pln">p2$setLib</span><span class="pun">(</span><span class="str">'libraries/widgets/nyt_home'</span><span class="pun">)</span></code></li><li class="L3"><code class="r"><span class="pln">p2$setTemplate</span><span class="pun">(</span><span class="pln">script </span><span class="pun">=</span><span class="pln"> </span><span class="str">"libraries/widgets/nyt_home/layouts/nyt_home.html"</span><span class="pun">)</span></code></li><li class="L4"><code class="r"></code></li><li class="L5"><code class="r"><span class="pln">p2$set</span><span class="pun">(</span></code></li><li class="L6"><code class="r"><span class="pln">  description </span><span class="pun">=</span><span class="pln"> </span><span class="str">"This data comes from the managers dataset included in the R package PerformanceAnalytics."</span><span class="pun">,</span></code></li><li class="L7"><code class="r"><span class="pln">  data </span><span class="pun">=</span><span class="pln"> managers</span><span class="pun">.</span><span class="pln">melt</span><span class="pun">,</span></code></li><li class="L8"><code class="r"><span class="pln">  groups </span><span class="pun">=</span><span class="pln"> </span><span class="str">"manager"</span></code></li><li class="L9"><code class="r"><span class="pun">)</span></code></li><li class="L0"><code class="r"><span class="pln">cat</span><span class="pun">(</span><span class="pln">noquote</span><span class="pun">(</span><span class="pln">p2$html</span><span class="pun">()))</span></code></li></ol></pre>

<!--Attribution:NYT Interactive http://www.nytimes.com/interactive/2011/05/31/business/economy/case-shiller-index.html-->

<div id="interactiveFreeFormMain">
<div class="g-shell">
<div class="g-tooltip">
<span class="g-playername-tooltip"></span>
<span class="g-dltype-tooltip"></span>
<span class="g-salary-tooltip"></span>
</div>

<h5 class="g-intro-sentence">
If you bought
<span class="g-selector g-city-selector"><select><option value="EDHEC.LS.EQ">EDHEC.LS.EQ</option><option value="HAM1">HAM1</option><option value="HAM2">HAM2</option><option value="HAM3">HAM3</option><option value="HAM4">HAM4</option><option value="HAM5">HAM5</option><option value="HAM6">HAM6</option><option value="SP500.TR">SP500.TR</option><option value="US.10Y.TR">US.10Y.TR</option><option value="US.3m.TR">US.3m.TR</option></select></span>
around
<span class="g-selector g-month-selector"></span>
<span class="g-selector g-date-selector"><select><option value="0">Sep. 2001</option><option value="1">Oct. 2001</option><option value="2">Nov. 2001</option><option value="3">Dec. 2001</option><option value="4">Jan. 2002</option><option value="5">Feb. 2002</option><option value="6">Mar. 2002</option><option value="7">Apr. 2002</option><option value="8">May. 2002</option><option value="9">Jun. 2002</option><option value="10">Jul. 2002</option><option value="11">Aug. 2002</option><option value="12">Sep. 2002</option><option value="13">Oct. 2002</option><option value="14">Nov. 2002</option><option value="15">Dec. 2002</option><option value="16">Jan. 2003</option><option value="17">Feb. 2003</option><option value="18">Mar. 2003</option><option value="19">Apr. 2003</option><option value="20">May. 2003</option><option value="21">Jun. 2003</option><option value="22">Jul. 2003</option><option value="23">Aug. 2003</option><option value="24">Sep. 2003</option><option value="25">Oct. 2003</option><option value="26">Nov. 2003</option><option value="27">Dec. 2003</option><option value="28">Jan. 2004</option><option value="29">Feb. 2004</option><option value="30">Mar. 2004</option><option value="31">Apr. 2004</option><option value="32">May. 2004</option><option value="33">Jun. 2004</option><option value="34">Jul. 2004</option><option value="35">Aug. 2004</option><option value="36">Sep. 2004</option><option value="37">Oct. 2004</option><option value="38">Nov. 2004</option><option value="39">Dec. 2004</option><option value="40">Jan. 2005</option><option value="41">Feb. 2005</option><option value="42">Mar. 2005</option><option value="43">Apr. 2005</option><option value="44">May. 2005</option><option value="45">Jun. 2005</option><option value="46">Jul. 2005</option><option value="47">Aug. 2005</option><option value="48">Sep. 2005</option><option value="49">Oct. 2005</option><option value="50">Nov. 2005</option><option value="51">Dec. 2005</option><option value="52">Jan. 2006</option><option value="53">Feb. 2006</option><option value="54">Mar. 2006</option><option value="55">Apr. 2006</option><option value="56">May. 2006</option><option value="57">Jun. 2006</option><option value="58">Jul. 2006</option><option value="59">Aug. 2006</option><option value="60">Sep. 2006</option><option value="61">Oct. 2006</option><option value="62">Nov. 2006</option><option value="63">Dec. 2006</option></select></span>
it would be worth
<span class="g-answer">96 percent more</span> today.
</h5>

<div class="g-chart"><div class="g-slider" style="width: 930px; margin-left: 10px;"><div class="g-slider-tray"></div><div class="g-slider-fill" style="width: 753.019px;"></div><div class="g-slider-handle" style="left: 176.981px;"><img class="g-slider-handle-icon" src="./nyt_interactive_files/handle@2x.png"></div><div class="g-current-month" style="left: 16.9812px;">Price changes from <b>Sept 2002</b>...</div><div class="g-most-recent-month">...to <b>Dec 2006</b></div></div><svg width="950" height="500" class="g-svg"><g transform="translate(10,20)"><rect class="background" width="930" height="479"></rect><g class="x axis" transform="translate(0,5)"><g class="tick major" transform="translate(45.07364442127216,0)" style="opacity: 1;"><line y2="-4" x2="0"></line><text y="-6" x="0" dy="20" style="text-anchor: middle;">'02</text></g><g class="tick major" transform="translate(222.0548748696559,0)" style="opacity: 1;"><line y2="-4" x2="0"></line><text y="-6" x="0" dy="20" style="text-anchor: middle;">'03</text></g><g class="tick major" transform="translate(399.03610531803963,0)" style="opacity: 1;"><line y2="-4" x2="0"></line><text y="-6" x="0" dy="20" style="text-anchor: middle;">'04</text></g><g class="tick major" transform="translate(576.5022158498437,0)" style="opacity: 1;"><line y2="-4" x2="0"></line><text y="-6" x="0" dy="20" style="text-anchor: middle;">'05</text></g><g class="tick major" transform="translate(753.4834462982272,0)" style="opacity: 1;"><line y2="-4" x2="0"></line><text y="-6" x="0" dy="20" style="text-anchor: middle;">'06</text></g><path class="domain" d="M0,-4V0H930V-4"></path></g><g class="g-linecontainer"><path class="g-city-line HAM6" d="M0,333.2779615683499L15.031282586027112,324.0608868937636L29.577685088633995,310.9711705578144L44.6089676746611,297.69793148263864L59.64025026068822,292.44850543488565L73.21689259645464,288.9507151161284L88.24817518248175,275.743900392748L102.79457768508864,274.47532216333946L117.82586027111576,279.3855347552229L132.3722627737226,285.58831588659785L147.40354535974973,296.74883176609626L162.43482794577685,294.17924337577955L176.9812304483837,290.7518950354114L192.01251303441083,293.2423399628237L206.55891553701773,288.74365326803616L221.59019812304481,289.8959997333456L236.62148070907196,289.4344742463066L250.19812304483838,288.53674916801316L265.2294056308655,283.7080462564694L279.77580813347237,283.8209477785647L294.80709071949946,277.06248822727935L309.35349322210635,277.26082973545806L324.3847758081335,271.54534432963635L339.4160583941606,265.1663701456041L353.9624608967674,270.2961821563947L368.99374348279457,254.90418300526247L383.54014598540147,252.15679966668546L398.57142857142856,238.6306314237468L413.6027111574557,231.88812005245316L427.66423357664235,229.88091611618233L442.69551616266943,225.89222408147327L457.24191866527633,231.01279088380667L472.2732012513035,235.22900946154525L486.81960375391037,232.01872994486934L501.8508863399374,241.99794271143531L516.8821689259645,245.05484729223875L531.4285714285714,239.97255005170084L546.4598540145986,237.1050854521291L561.0062565172054,227.0625339236339L576.0375391032326,219.45502945992882L591.0688216892596,223.27732132650343L604.6454640250261,215.47498384715738L619.6767466110531,219.90087880241754L634.22314911366,231.01279088380667L649.2544316996872,224.2005560087546L663.800834202294,220.97391302125106L678.8321167883212,208.11263880649176L693.8633993743483,204.19316026892363L708.4098018769552,197.30712615889354L723.4410844629822,208.50600428174494L737.9874869655891,199.53344472624485L753.0187695516162,192.5370775682985L768.0500521376433,180.40222362565123L781.6266944734098,178.98611387166972L796.6579770594369,173.69533731395342L811.2043795620438,164.57553799178885L826.2356621480709,162.55933195015552L840.7820646506777,160.62971951656255L855.8133472367049,166.81225874625687L870.844629822732,161.62161358812216L885.3910323253389,166.47484095958646L900.422314911366,161.39128633378766L914.9687174139729,153.35267405782247L930,147.57523654903304"></path><path class="g-city-line SP500.TR" d="M0,228.50106556315964L15.031282586027112,223.3617651254677L29.577685088633995,203.29399912356064L44.6089676746611,200.90801762875117L59.64025026068822,204.9144371498026L73.21689259645464,210.1989258043887L88.24817518248175,200.1883053361105L102.79457768508864,217.1536173537125L117.82586027111576,219.1701574386788L132.3722627737226,239.23152885758353L147.40354535974973,261.2869232171497L162.43482794577685,259.49930152831337L176.9812304483837,290.7518950354114L192.01251303441083,267.84616466420954L206.55891553701773,252.30289817922508L221.59019812304481,268.73213739145956L236.62148070907196,275.9435246252107L250.19812304483838,280.04885257982585L265.2294056308655,277.42534150717336L279.77580813347237,255.91975083079404L294.80709071949946,241.9716325972355L309.35349322210635,238.51937666723816L324.3847758081335,233.7816708208873L339.4160583941606,228.53652278724408L353.9624608967674,231.43001454363613L368.99374348279457,216.4772132255742L383.54014598540147,214.09915999854326L398.57142857142856,200.21492736303867L413.6027111574557,195.28144655670366L427.66423357664235,191.5167700441873L442.69551616266943,195.6477104119316L457.24191866527633,199.94882445375316L472.2732012513035,196.25050399809408L486.81960375391037,191.02731223636414L501.8508863399374,200.16168591854546L516.8821689259645,199.04601988220605L531.4285714285714,196.1193480543228L546.4598540145986,192.00711156022504L561.0062565172054,181.22028842899613L576.0375391032326,172.1389575458188L591.0688216892596,178.8474919086953L604.6454640250261,173.19739313966397L619.6767466110531,178.036607610558L634.22314911366,183.26359908722725L649.2544316996872,174.7443370586132L663.800834202294,174.35677422796277L678.8321167883212,164.4461692863111L693.8633993743483,166.9313358324685L708.4098018769552,164.7263700926871L723.4410844629822,169.29686430982827L737.9874869655891,159.22233833944546L753.0187695516162,159.1536667707481L768.0500521376433,152.03809767092105L781.6266944734098,151.30333255398455L796.6579770594369,147.94439141887477L811.2043795620438,144.3229187812908L826.2356621480709,152.2611468026185L840.7820646506777,151.88207220375273L855.8133472367049,150.1938261187696L870.844629822732,143.80330521559745L885.3910323253389,136.90520856312423L900.422314911366,128.18985033362986L914.9687174139729,123.07175870120665L930,119.29056803979853"></path><path class="g-city-line HAM5" d="M0,244.00837843809668L15.031282586027112,282.4561238566414L29.577685088633995,276.0138740731186L44.6089676746611,263.1768834221352L59.64025026068822,241.12465221666162L73.21689259645464,243.46738939329913L88.24817518248175,263.8792565317797L102.79457768508864,251.68916341806457L117.82586027111576,266.8527917409092L132.3722627737226,279.95637549727746L147.40354535974973,299.37278087845334L162.43482794577685,279.0991640970277L176.9812304483837,290.7518950354114L192.01251303441083,299.22191823084694L206.55891553701773,295.0974462551351L221.59019812304481,294.28330654744417L236.62148070907196,294.6653516313495L250.19812304483838,296.4907594474725L265.2294056308655,284.51198743454427L279.77580813347237,280.8695496172538L294.80709071949946,264.43008151656613L309.35349322210635,249.32214782796026L324.3847758081335,260.5219849233217L339.4160583941606,263.63513023215023L353.9624608967674,253.82166438957478L368.99374348279457,238.32478610439918L383.54014598540147,229.91249264493925L398.57142857142856,241.44957900416077L413.6027111574557,242.10060114767862L427.66423357664235,234.23113616570086L442.69551616266943,235.9249065045651L457.24191866527633,246.61084428812694L472.2732012513035,242.69874548444255L486.81960375391037,240.88121198648764L501.8508863399374,247.14983717751207L516.8821689259645,254.5002252292109L531.4285714285714,244.9206609594698L546.4598540145986,248.0089057623576L561.0062565172054,237.54917342329853L576.0375391032326,223.14240019069447L591.0688216892596,223.26906621019563L604.6454640250261,221.55144950019945L619.6767466110531,224.259093917014L634.22314911366,232.36438723792133L649.2544316996872,224.10654685768253L663.800834202294,223.19305950952992L678.8321167883212,213.68463602031477L693.8633993743483,206.56299253441523L708.4098018769552,204.68712199530592L723.4410844629822,207.78091631498677L737.9874869655891,201.60477714122493L753.0187695516162,205.73031164366233L768.0500521376433,191.4330839482601L781.6266944734098,192.3812605983644L796.6579770594369,182.73950538451123L811.2043795620438,176.14146017768127L826.2356621480709,183.35133032825325L840.7820646506777,186.45342810384489L855.8133472367049,190.93773798398263L870.844629822732,186.3870557502526L885.3910323253389,182.82682460638358L900.422314911366,175.69447729867557L914.9687174139729,174.67555620671988L930,166.20675309846416"></path><path class="g-city-line HAM3" d="M0,241.30287874500016L15.031282586027112,246.92805451705703L29.577685088633995,240.2739463473349L44.6089676746611,239.78676964731602L59.64025026068822,243.75301844768802L73.21689259645464,255.23622634149962L88.24817518248175,249.6721219355693L102.79457768508864,256.632951907548L117.82586027111576,257.2847100897769L132.3722627737226,269.8169287277444L147.40354535974973,279.2104454502172L162.43482794577685,278.5604094253946L176.9812304483837,290.7518950354114L192.01251303441083,287.9971524718817L206.55891553701773,278.6545211958796L221.59019812304481,296.9635301793704L236.62148070907196,297.3733222539746L250.19812304483838,296.8024698556507L265.2294056308655,293.8034581173546L279.77580813347237,279.909318941969L294.80709071949946,268.6561859406778L309.35349322210635,265.7115228643147L324.3847758081335,263.38805773874543L339.4160583941606,255.30531645730176L353.9624608967674,255.9856404203613L368.99374348279457,240.03433127420163L383.54014598540147,236.85501863255672L398.57142857142856,234.2847981168874L413.6027111574557,232.82316208126966L427.66423357664235,228.9547824217719L442.69551616266943,230.00195783709412L457.24191866527633,235.48656096449795L472.2732012513035,237.31270779439302L486.81960375391037,237.04338547215406L501.8508863399374,246.62672162940913L516.8821689259645,248.15356587467548L531.4285714285714,249.02147789522252L546.4598540145986,249.32266468860843L561.0062565172054,234.68479515638325L576.0375391032326,229.81841042461176L591.0688216892596,227.8335539921121L604.6454640250261,216.74380609191252L619.6767466110531,214.23245422076383L634.22314911366,214.7279110898903L649.2544316996872,208.47754949411933L663.800834202294,207.534168479455L678.8321167883212,202.08364749791218L693.8633993743483,202.62854635669703L708.4098018769552,197.32114690533797L723.4410844629822,200.3613921196416L737.9874869655891,195.99877444465426L753.0187695516162,191.113491228815L768.0500521376433,181.75258510910572L781.6266944734098,174.62203660196815L796.6579770594369,171.4110000394548L811.2043795620438,170.56671675287714L826.2356621480709,176.38181658878796L840.7820646506777,181.55501314328097L855.8133472367049,178.80399190832713L870.844629822732,172.0247508260606L885.3910323253389,170.08243969528354L900.422314911366,165.1419379499979L914.9687174139729,157.94600782070097L930,154.96493943422684"></path><path class="g-city-line HAM4" d="M0,295.23650936060926L15.031282586027112,282.840674831287L29.577685088633995,263.6172369760924L44.6089676746611,234.32395038100367L59.64025026068822,243.85073901634084L73.21689259645464,250.78866450119864L88.24817518248175,215.74059301962643L102.79457768508864,199.7143585436786L117.82586027111576,199.22245417072787L132.3722627737226,212.37804173360166L147.40354535974973,253.54114703387503L162.43482794577685,258.78512083904604L176.9812304483837,290.7518950354114L192.01251303441083,288.29075535216504L206.55891553701773,267.1394026283763L221.59019812304481,257.6963910596168L236.62148070907196,267.142146530854L250.19812304483838,268.4210742266713L265.2294056308655,261.67406146589246L279.77580813347237,232.16840956385437L294.80709071949946,208.92371262612608L309.35349322210635,196.18392160535825L324.3847758081335,187.59448155449678L339.4160583941606,189.8764594351693L353.9624608967674,187.36938033357933L368.99374348279457,170.68936962245692L383.54014598540147,148.25050450859737L398.57142857142856,135.31545951837626L413.6027111574557,131.75870391514246L427.66423357664235,120.03145900190094L442.69551616266943,114.50097858610837L457.24191866527633,138.8851902991895L472.2732012513035,143.82354225275543L486.81960375391037,142.57183783891355L501.8508863399374,151.88785272839357L516.8821689259645,143.7538515653086L531.4285714285714,132.94470125655107L546.4598540145986,134.8261633516595L561.0062565172054,112.56831669538406L576.0375391032326,100.12274765247287L591.0688216892596,98.98284710592759L604.6454640250261,107.75021305118253L619.6767466110531,113.73562102612686L634.22314911366,116.30574266667082L649.2544316996872,112.94130848961964L663.800834202294,94.0494672694233L678.8321167883212,77.40816712259868L693.8633993743483,84.61176505837489L708.4098018769552,93.78846762654848L723.4410844629822,101.86401449229959L737.9874869655891,85.08857384833914L753.0187695516162,75.6943506203566L768.0500521376433,61.11045156015035L781.6266944734098,76.15574465801069L796.6579770594369,73.26465104764736L811.2043795620438,68.4166997861127L826.2356621480709,73.46629783886067L840.7820646506777,69.31581225820372L855.8133472367049,72.59357433483967L870.844629822732,77.59926048650857L885.3910323253389,72.31221584504578L900.422314911366,58.59072794144737L914.9687174139729,48.64109489231697L930,43.113360671971634"></path><path class="g-city-line EDHEC.LS.EQ" d="M0,280.4987397560898L15.031282586027112,277.82201460199866L29.577685088633995,272.4453462440981L44.6089676746611,267.6127764989766L59.64025026068822,268.60744531456567L73.21689259645464,271.96774475122936L88.24817518248175,267.80067789045256L102.79457768508864,268.93082452422266L117.82586027111576,269.8491622122286L132.3722627737226,276.7070526555409L147.40354535974973,287.48146647473936L162.43482794577685,286.3722213429203L176.9812304483837,290.7518950354114L192.01251303441083,287.4323910925863L206.55891553701773,281.414756476226L221.59019812304481,285.4909416729105L236.62148070907196,285.35627469522376L250.19812304483838,286.36359563878636L265.2294056308655,285.82072783617616L279.77580813347237,277.84709128050594L294.80709071949946,268.17687113402565L309.35349322210635,264.7300823476605L324.3847758081335,261.53632986107675L339.4160583941606,256.7247936817584L353.9624608967674,254.18456295203399L368.99374348279457,246.1821397419972L383.54014598540147,242.68349621496083L398.57142857142856,237.54263407589409L413.6027111574557,232.37940880238656L427.66423357664235,229.05307653070338L442.69551616266943,227.9378331841252L457.24191866527633,232.4737008291958L472.2732012513035,233.41842604476773L486.81960375391037,230.94549704044965L501.8508863399374,235.17487867593132L516.8821689259645,235.77085128175548L531.4285714285714,230.12616605122065L546.4598540145986,228.12338933276567L561.0062565172054,219.87387677069773L576.0375391032326,215.09932629887766L591.0688216892596,215.56416008587433L604.6454640250261,209.90776990353652L619.6767466110531,212.52400213645927L634.22314911366,217.5653656917326L649.2544316996872,214.45871811888662L663.800834202294,209.21434357616215L678.8321167883212,202.12262411197946L693.8633993743483,199.49981422394148L708.4098018769552,193.5311354154104L723.4410844629822,198.2913805282589L737.9874869655891,192.6338061670413L753.0187695516162,185.95697306287786L768.0500521376433,175.79926752171326L781.6266944734098,175.35948526119984L796.6579770594369,168.97740645202038L811.2043795620438,164.33323997732253L826.2356621480709,171.16965672709358L840.7820646506777,172.84919722675386L855.8133472367049,173.7023730714863L870.844629822732,170.62462671010292L885.3910323253389,170.5870787206211L900.422314911366,165.36252775640645L914.9687174139729,159.98371683851803L930,155.86274717074684"></path><path class="g-city-line US.3m.TR" d="M0,296.1071825708856L15.031282586027112,295.4049944515189L29.577685088633995,294.8122500332131L44.6089676746611,294.381974300096L59.64025026068822,294.00604142369184L73.21689259645464,293.6306282019033L88.24817518248175,293.2289747777122L102.79457768508864,292.80119818603856L117.82586027111576,292.3740943315665L132.3722627737226,291.97429357117363L147.40354535974973,291.57508049401537L162.43482794577685,291.1764533749087L176.9812304483837,290.7518950354114L192.01251303441083,290.35447346189864L206.55891553701773,289.90476427354326L221.59019812304481,289.58777023990183L236.62148070907196,289.32389088811885L250.19812304483838,289.0866184886746L265.2294056308655,288.77057740472924L279.77580813347237,288.507490483556L294.80709071949946,288.2446581708823L309.35349322210635,287.87711973829244L324.3847758081335,287.69353687654615L339.4160583941606,287.4576839676814L353.9624608967674,287.1958651799413L368.99374348279457,286.98659172902444L383.54014598540147,286.75135169050645L398.57142857142856,286.490212624724L413.6027111574557,286.2814820101728L427.66423357664235,286.07291169562006L442.69551616266943,285.86450143504123L457.24191866527633,285.63023090080384L472.2732012513035,285.3961622755988L486.81960375391037,285.2142482692351L501.8508863399374,284.9026788956873L516.8821689259645,284.5655482821061L531.4285714285714,284.2288356456456L546.4598540145986,283.86668829177927L561.0062565172054,283.5050232041028L576.0375391032326,282.91190271272285L591.0688216892596,282.4743403447151L604.6454640250261,282.0374818195867L619.6767466110531,281.37070152292483L634.22314911366,280.7566616400827L649.2544316996872,280.0675221882972L663.800834202294,279.4309855272211L678.8321167883212,278.7959372850802L693.8633993743483,278.01053416928517L708.4098018769552,277.2021708676542L723.4410844629822,276.47166413243895L737.9874869655891,275.5926268586095L753.0187695516162,274.7164255858901L768.0500521376433,273.86795694993964L781.6266944734098,272.9972933911391L796.6579770594369,271.956168210083L811.2043795620438,270.94366702308133L826.2356621480709,269.8612631691614L840.7820646506777,268.8076110944585L855.8133472367049,267.68495565466503L870.844629822732,266.46991869831595L885.3910323253389,265.23615583346617L900.422314911366,264.20026172068987L914.9687174139729,263.04856274592646L930,261.85404724051375"></path><path class="g-city-line HAM2" d="M0,252.76394965423677L15.031282586027112,258.79675369345557L29.577685088633995,256.57535452170833L44.6089676746611,256.6819942040402L59.64025026068822,261.82339954944723L73.21689259645464,272.0914875601405L88.24817518248175,266.1540755753555L102.79457768508864,269.32297123142945L117.82586027111576,277.45546575797584L132.3722627737226,286.7936574557095L147.40354535974973,290.1811644676699L162.43482794577685,290.28978262282436L176.9812304483837,290.7518950354114L192.01251303441083,289.58754984675426L206.55891553701773,291.8514354928011L221.59019812304481,292.45002455120084L236.62148070907196,292.53216757430664L250.19812304483838,296.60953875117076L265.2294056308655,298.1335066054956L279.77580813347237,301.3833238025956L294.80709071949946,287.74568108723827L309.35349322210635,281.436657401503L324.3847758081335,275.1566809891861L339.4160583941606,277.44683045464177L353.9624608967674,278.88985164645976L368.99374348279457,275.2737291706969L383.54014598540147,272.1959285232168L398.57142857142856,264.458507030455L413.6027111574557,259.307832687671L427.66423357664235,256.9754694212004L442.69551616266943,253.500878976406L457.24191866527633,251.2960628630325L472.2732012513035,249.26463803079494L486.81960375391037,245.55377438830368L501.8508863399374,244.40445143947275L516.8821689259645,246.16874121203801L531.4285714285714,243.46308270670295L546.4598540145986,239.50453113385393L561.0062565172054,232.75566541815883L576.0375391032326,230.51858733029752L591.0688216892596,231.9754595274472L604.6454640250261,226.33732249913575L619.6767466110531,228.20372626617834L634.22314911366,229.2863611176791L649.2544316996872,233.07326540913817L663.800834202294,227.8677848463468L678.8321167883212,222.50145172202144L693.8633993743483,219.1831335291377L708.4098018769552,214.34890116463856L723.4410844629822,219.4387425903489L737.9874869655891,216.8934136735936L753.0187695516162,214.59999852922692L768.0500521376433,193.38916448212512L781.6266944734098,202.408457531706L796.6579770594369,198.33417858343375L811.2043795620438,193.70617701664798L826.2356621480709,195.10544506861868L840.7820646506777,198.29116209368055L855.8133472367049,201.86312863178517L870.844629822732,204.95321075982906L885.3910323253389,211.3085738907206L900.422314911366,206.78877187133548L914.9687174139729,201.25365742868547L930,202.95488362946116"></path><path class="g-city-line US.10Y.TR" d="M0,323.3176062319711L15.031282586027112,315.82767076316816L29.577685088633995,324.7552695053106L44.6089676746611,329.56515762618267L59.64025026068822,328.22081080308044L73.21689259645464,324.781964802672L88.24817518248175,335.05168015956997L102.79457768508864,327.3839607962577L117.82586027111576,325.10251321107273L132.3722627737226,319.57300722029527L147.40354535974973,311.16669841306634L162.43482794577685,303.18533182285L176.9812304483837,290.7518950354114L192.01251303441083,296.2718072521791L206.55891553701773,301.9553269690791L221.59019812304481,292.50040124503045L236.62148070907196,294.88127568033656L250.19812304483838,287.4743925355749L265.2294056308655,289.4127061436941L279.77580813347237,289.31897547581303L294.80709071949946,276.95335220430735L309.35349322210635,280.1735382554714L324.3847758081335,300.14508238592475L339.4160583941606,297.259082259441L353.9624608967674,285.18037470338504L368.99374348279457,292.00305846315916L383.54014598540147,291.19976282273996L398.57142857142856,288.9443759578179L413.6027111574557,285.2496064514312L427.66423357664235,280.7404499285488L442.69551616266943,276.64013159912616L457.24191866527633,290.0932226458806L472.2732012513035,291.955739949669L486.81960375391037,290.1402177329487L501.8508863399374,286.15122887493953L516.8821689259645,277.827804946739L531.4285714285714,276.77432477034324L546.4598540145986,273.92582030951763L561.0062565172054,280.1735382554714L576.0375391032326,276.14865648229375L591.0688216892596,273.39503589140145L604.6454640250261,277.5584425567044L619.6767466110531,279.5173998418337L634.22314911366,272.2265489488984L649.2544316996872,267.537358729805L663.800834202294,265.3192744366751L678.8321167883212,271.7210297666255L693.8633993743483,265.64117160306523L708.4098018769552,271.45765369217236L723.4410844629822,275.4131074219707L737.9874869655891,273.99224136087946L753.0187695516162,270.80032878680424L768.0500521376433,272.57877026112124L781.6266944734098,272.95350659972974L796.6579770594369,278.41234157924066L811.2043795620438,281.87783582532853L826.2356621480709,282.10588572326026L840.7820646506777,281.5133538280097L855.8133472367049,277.2445237218153L870.844629822732,271.3699183958224L885.3910323253389,268.29521939796086L900.422314911366,266.71692602982705L914.9687174139729,262.88524515272854L930,267.126832573249"></path><path class="g-city-line HAM1 g-highlight-line" d="M0,278.7473885942856L15.031282586027112,278.44760001807566L29.577685088633995,269.37957346014986L44.6089676746611,251.6116524917524L59.64025026068822,247.9580493002856L73.21689259645464,251.35809574894964L88.24817518248175,249.64015948022532L102.79457768508864,248.40893696470692L117.82586027111576,248.81035539527718L132.3722627737226,255.44368776521702L147.40354535974973,276.75038261105726L162.43482794577685,274.6685208365987L176.9812304483837,290.7518950354114L192.01251303441083,282.8030732094539L206.55891553701773,265.42732459999183L221.59019812304481,274.3373402486544L236.62148070907196,285.76135969008084L250.19812304483838,292.66605466615465L265.2294056308655,282.956772961027L279.77580813347237,265.82799043241977L294.80709071949946,256.8365646719354L309.35349322210635,248.5844845263319L324.3847758081335,243.85942482216976L339.4160583941606,243.76082812205289L353.9624608967674,241.3318967919825L368.99374348279457,228.56901933022345L383.54014598540147,224.0165053569074L398.57142857142856,216.64660231354054L413.6027111574557,215.22294315379304L427.66423357664235,215.245130532384L442.69551616266943,212.90329804499652L457.24191866527633,214.07169013863842L472.2732012513035,211.8494518431624L486.81960375391037,204.9050566951862L501.8508863399374,204.9050566951862L516.8821689259645,203.41400020286255L531.4285714285714,201.02415021048733L546.4598540145986,201.1926531521354L561.0062565172054,190.69492354181898L576.0375391032326,179.01057028450595L591.0688216892596,178.97173919958294L604.6454640250261,173.20906580434064L619.6767466110531,178.87468577058002L634.22314911366,184.6213735492226L649.2544316996872,183.45437187433419L663.800834202294,179.1270968627336L678.8321167883212,176.6519761528898L693.8633993743483,173.6084969620482L708.4098018769552,166.599836645055L723.4410844629822,171.73058648408426L737.9874869655891,165.52608560531303L753.0187695516162,158.5402463240158L768.0500521376433,140.36284507395266L781.6266944734098,136.450273671429L796.6579770594369,125.88474040488126L811.2043795620438,126.17230060438231L826.2356621480709,133.5277616248531L840.7820646506777,127.7271938542354L855.8133472367049,131.6619807990425L870.844629822732,127.32559586385185L885.3910323253389,125.48585567628731L900.422314911366,114.1353312703925L914.9687174139729,110.97326933371062L930,107.86254152235466"></path></g><rect class="g-screen" width="186.9812304483837" height="479" x="-10"></rect><g class="y axis" transform="translate(0,0)"><g class="tick major minor" transform="translate(0,479)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">50% less</text></g><g class="tick major minor" transform="translate(0,429.48427156130185)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">40% less</text></g><g class="tick major minor" transform="translate(0,387.61931968622906)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">30% less</text></g><g class="tick major minor" transform="translate(0,351.3542488328178)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">20% less</text></g><g class="tick major minor" transform="translate(0,319.3661893251974)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">10% less</text></g><g class="tick major minor g-baseline" transform="translate(0,290.7518950354114)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">Starting price</text></g><g class="tick major minor" transform="translate(0,102.50379007082307)" style="opacity: 1;"><line x2="950" y2="0"></line><text x="30" y="-5" style="text-anchor: end;" transform="translate(136.9812304483837,0)">100% more</text></g><path class="domain" d="M950,20H0V479H950"></path></g><rect class="g-hover-bar" width="2" height="479" x="174.9812304483837"></rect><g class="focus" transform="translate(174.9812304483837,290.7518950354114)"><circle r="5"></circle><text x="9" dy=".35em"></text></g><g class="g-endpoint" transform="translate(930,107.86254152235466)"><circle r="5"></circle><text class="g-end-label g-selected-city-endpoint-label" y="-45" x="0">HAM1</text><text class="g-end-label g-selected-city-endpoint-value" y="-20" x="0">96 percent more</text></g></g></svg></div>

<div class="g-table-container">
<div class="g-table-intro">
<h4 style="text-indent:0px;font-family:arial,sans-serif;">Behind the data </h4>
<p class="g-table-readin">This data comes from the managers dataset included in the R package PerformanceAnalytics.</p>
</div>

<table class="g-table">
<tbody><tr>
<th class="g-proper-city">Manager</th>
<th class="g-yoy-chg" colspan="2">Year-over-year change</th>
<th class="g-peak-month-td" colspan="2">Since peak</th>
<th class="g-change-since-selected" colspan="2"> <span class="g-date-compare">Since Sept 2002</span></th>
</tr>
</tbody><tr class="g-table-row HAM1-row g-selected-row"><td class="g-proper-city">HAM1</td><td class="g-num-td">+21%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 10.0541px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+96%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 47.0946px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row HAM6-row"><td class="g-proper-city">HAM6</td><td class="g-num-td">+18%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 8.82402px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+69%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 34.0208px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row SP500.TR-row"><td class="g-proper-city">SP500.TR</td><td class="g-num-td">+16%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 7.74838px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+88%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 43.1346px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row HAM5-row"><td class="g-proper-city">HAM5</td><td class="g-num-td">+16%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 7.67746px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+58%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 28.5157px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row HAM3-row"><td class="g-proper-city">HAM3</td><td class="g-num-td">+14%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 6.97737px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+65%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 31.7921px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row HAM4-row"><td class="g-proper-city">HAM4</td><td class="g-num-td">+13%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 6.24672px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+149%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 72.9691px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row EDHEC.LS.EQ-row"><td class="g-proper-city">EDHEC.LS.EQ</td><td class="g-num-td">+12%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 5.74308px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+64%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 31.5254px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row US.3m.TR-row"><td class="g-proper-city">US.3m.TR</td><td class="g-num-td">+5%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 2.37697px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">+0%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+11%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 5.50241px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row HAM2-row"><td class="g-proper-city">HAM2</td><td class="g-num-td">+4%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 2.14716px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">-3%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 1.69617px; left: 73.3038px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+38%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 18.7045px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr><tr class="g-table-row US.10Y.TR-row"><td class="g-proper-city">US.10Y.TR</td><td class="g-num-td">+1%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0.667417px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-num-td">-2%</td><td class="g-bar-td"><div class="g-bar-container"><div class="g-yoy-bar" style="width: 0.759484px; left: 74.2405px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td><td class="g-change-since-selected-td g-num-td">+9%</td><td class="g-live-change-bar-td"><div class="g-live-bar-container"><div class="g-live-bar" style="width: 4.45427px; left: 75px;"></div><div class="g-zeromarker" style="left: 75px;"></div></div></td></tr></table>

<p></p></div>
</div><p></p>

<script>
(function() {
  var params = {
 "dom": "chart4f86c8f743c",
"width":    800,
"height":    400,
"description": "This data comes from the managers dataset included in the R package PerformanceAnalytics.",
"data": {
 "date": [ "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31", "2001-09-30", "2001-10-31", "2001-11-30", "2001-12-31", "2002-01-31", "2002-02-28", "2002-03-31", "2002-04-30", "2002-05-31", "2002-06-30", "2002-07-31", "2002-08-31", "2002-09-30", "2002-10-31", "2002-11-30", "2002-12-31", "2003-01-31", "2003-02-28", "2003-03-31", "2003-04-30", "2003-05-31", "2003-06-30", "2003-07-31", "2003-08-31", "2003-09-30", "2003-10-31", "2003-11-30", "2003-12-31", "2004-01-31", "2004-02-29", "2004-03-31", "2004-04-30", "2004-05-31", "2004-06-30", "2004-07-31", "2004-08-31", "2004-09-30", "2004-10-31", "2004-11-30", "2004-12-31", "2005-01-31", "2005-02-28", "2005-03-31", "2005-04-30", "2005-05-31", "2005-06-30", "2005-07-31", "2005-08-31", "2005-09-30", "2005-10-31", "2005-11-30", "2005-12-31", "2006-01-31", "2006-02-28", "2006-03-31", "2006-04-30", "2006-05-31", "2006-06-30", "2006-07-31", "2006-08-31", "2006-09-30", "2006-10-31", "2006-11-30", "2006-12-31" ],
"managerm.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR", "US.3m.TR" ],
"val": [  96.88, 96.987, 100.28, 107.06, 108.51, 107.16, 107.84, 108.33, 108.17, 105.56, 97.595, 98.346, 92.691, 95.444, 101.75, 98.466,  94.41,  92.04,  95.39,  101.6, 105.02, 108.26, 110.16,  110.2, 111.19, 116.54, 118.51, 121.77, 122.41,  122.4, 123.46, 122.93, 123.94, 127.15, 127.15, 127.85, 128.98,  128.9, 133.98, 139.87, 139.89, 142.89, 139.94, 137.01,  137.6, 139.81, 141.09, 142.68, 146.41, 143.67, 146.99, 150.82, 161.26,  163.6, 170.09, 169.91, 165.37, 168.94, 166.51, 169.19, 170.34, 177.61, 179.69, 181.76, 103.33, 101.06, 101.89, 101.85,  99.94, 96.232, 98.359, 97.218,  94.35, 91.161, 90.031, 89.995, 89.842, 90.228, 89.479, 89.282, 89.255, 87.925, 87.433, 86.393, 90.842, 92.977, 95.152, 94.353, 93.853, 95.111, 96.195, 98.975, 100.87, 101.74, 103.05, 103.89, 104.67, 106.11, 106.56, 105.87, 106.93,  108.5, 111.23, 112.15, 111.55, 113.89, 113.11, 112.66,  111.1, 113.25, 115.51, 116.93, 119.03, 116.82, 117.92, 118.92, 128.58, 124.38, 126.26, 128.43, 127.77, 126.28, 124.63, 123.22, 120.37, 122.39, 124.91, 124.13,  99.32, 97.284, 99.697, 99.876, 98.428, 94.353, 96.306, 93.869, 93.644, 89.421, 86.381, 86.588, 82.787, 83.631, 86.558, 80.915, 80.793, 80.963, 81.862, 86.159, 89.804, 90.783, 91.563, 94.329, 94.093, 99.785, 100.96, 101.92, 102.47, 103.94, 103.54, 101.47, 100.79, 100.89, 97.392, 96.846, 96.537,  96.43, 101.77, 103.61, 104.37, 108.72, 109.73, 109.53, 112.08, 112.47, 114.75, 114.52, 116.78, 115.48, 117.35, 119.48, 123.67, 126.96, 128.47, 128.87, 126.14, 123.76, 125.02, 128.18,  129.1, 131.47,    135, 136.49,  89.25, 93.418, 100.27, 111.69, 107.84, 105.12,  119.6, 126.87,  127.1, 121.09, 104.06, 102.07, 90.736, 91.562, 98.978, 102.48, 98.977, 98.512, 100.99, 112.58, 122.64, 128.53, 132.66, 131.55, 132.77, 141.18, 153.34, 160.82, 162.94, 170.13, 173.63, 158.72, 155.86, 156.58,  151.3,  155.9, 162.23, 161.11, 174.87, 183.07, 183.84,    178, 174.12, 172.48, 174.63, 187.21, 199.04, 193.83, 187.39,  181.9, 193.49,  200.3, 211.35, 199.96,  202.1, 205.74, 201.95, 205.06,  202.6,  198.9, 202.81, 213.32, 221.28, 225.83,   99.3, 86.192, 88.261, 92.533, 100.36, 99.498, 92.294, 96.531, 91.289, 86.989, 80.987, 87.264, 83.599, 81.032, 82.272, 82.519, 82.403, 81.851, 85.542, 86.697, 92.107, 97.376, 93.442, 92.377, 95.776,  101.4, 104.59, 100.24,    100, 102.94,  102.3, 98.353,  99.78, 100.45, 98.158, 95.537, 98.967, 97.848, 101.69, 107.23, 107.18, 107.86, 106.79, 103.65, 106.85, 107.21, 111.03, 113.98, 114.77, 113.47, 116.08, 114.33, 120.51, 120.09, 124.43, 127.49, 124.15, 122.74, 120.73, 122.77, 124.39,  127.7, 128.18, 132.24, 100.23, 103.69, 108.81, 114.26, 116.49,    118, 123.88, 124.46, 122.23, 119.47, 114.66, 115.75, 117.22, 116.15, 118.09, 117.59, 117.79, 118.18,  120.3, 120.25, 123.28, 123.19, 125.81,  128.8, 126.39, 133.76, 135.12, 142.02, 145.59, 146.67, 148.84, 146.06, 143.81, 145.52, 140.27,  138.7, 141.32, 142.82,  148.2, 152.41, 150.28, 154.66, 152.16, 146.06, 149.77, 151.56, 158.91, 161.22, 165.36, 158.68, 164.01, 168.29, 175.98,  176.9, 180.38, 186.54, 187.93, 189.27, 185.01, 188.58, 185.24, 188.74, 194.41, 198.59,  96.52, 97.476, 99.425, 101.21, 100.84,   99.6, 101.14, 100.72, 100.38, 97.877,  94.07, 94.455, 92.944, 94.087, 96.195, 94.762, 94.809, 94.458, 94.647, 97.467,    101, 102.29,  103.5, 105.35, 106.34, 109.52, 110.94, 113.06, 115.23, 116.65, 117.13, 115.19, 114.79, 115.84, 114.05,  113.8, 116.19, 117.05, 120.66,  122.8, 122.59, 125.17, 123.97, 121.69, 123.09, 125.49, 128.81, 130.06, 132.95, 130.64, 133.39, 136.71, 141.92, 142.15, 145.53, 148.04, 144.36, 143.47, 143.02, 144.65, 144.67, 147.48, 150.43, 152.73,  91.92, 93.676, 100.86, 101.75, 100.26, 98.328, 102.02, 95.842, 95.133, 88.359, 81.467, 82.005, 73.091, 79.523, 84.207, 79.264, 77.187, 76.029, 76.767, 83.093, 87.472, 88.591,  90.15, 91.908, 90.934, 96.081, 96.926, 102.01, 103.88, 105.33, 103.74, 102.11, 103.51, 105.52, 102.03, 102.45, 103.56, 105.14,  109.4, 113.12, 110.36, 112.68, 110.69, 108.58, 112.04,  112.2, 116.37, 115.31, 116.25, 114.31, 118.63, 118.66, 121.81, 122.14, 123.66, 125.32, 121.71, 121.88, 122.64, 125.56, 128.79, 132.99, 135.52, 137.42, 102.28, 105.14, 101.74, 99.954, 100.45, 101.73, 97.955, 100.76, 101.61,  103.7, 106.96, 110.15, 115.31, 112.99, 110.65, 114.57, 113.57, 116.71, 115.88, 115.92, 121.32, 119.89, 111.39, 112.58,  117.7, 114.78, 115.12, 116.08, 117.67, 119.64, 121.46, 115.59,  114.8, 115.57, 117.28, 120.93,  121.4, 122.68, 119.89, 121.68, 122.92, 121.05, 120.18, 123.45,  125.6, 126.63, 123.68, 126.48,  123.8, 122.01, 122.65,  124.1, 123.29, 123.12, 120.67, 119.14, 119.04,  119.3, 121.19, 123.84, 125.25, 125.98, 127.77, 125.79, 100.43, 100.69, 100.91, 101.07, 101.21, 101.35,  101.5, 101.66, 101.82, 101.97, 102.12, 102.27, 102.43, 102.58, 102.75, 102.87, 102.97, 103.06, 103.18, 103.28, 103.38, 103.52, 103.59, 103.68, 103.78, 103.86, 103.95, 104.05, 104.13, 104.21, 104.29, 104.38, 104.47, 104.54, 104.66, 104.79, 104.92, 105.06,  105.2, 105.43,  105.6, 105.77, 106.03, 106.27, 106.54, 106.79, 107.04, 107.35, 107.67, 107.96, 108.31, 108.66,    109, 109.35, 109.77, 110.18, 110.62, 111.05, 111.51, 112.01, 112.52, 112.95, 113.43, 113.93 ] 
},
"groups": "manager",
"id": "chart4f86c8f743c" 
}
  
  //set description of the data provided in params
  d3.select('.g-table-readin').text( params.description );
  //http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript
  function toTitleCase(str)
    {
        return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
    }
  
  //set table heading to groups
  d3.select('.g-proper-city').text( toTitleCase(params.groups) );
  
  var nytMonths = {"Jan": "Jan.",
                   "Feb": "Feb.",
                   "Mar": "March",
                   "Apr": "April",
                   "May": "May",
                   "Jun": "June",
                   "Jul": "July",
                   "Aug": "Aug.",
                   "Sep": "Sept",
                   "Oct": "Oct.",
                   "Nov": "Nov.",
                   "Dec": "Dec."
                    }

  d3.selection.prototype.moveToFront = function() {
    return this.each(function(){
      this.parentNode.appendChild(this);
    });
  };

  var margin = {top: 20, right: 10, bottom: 1, left: 10},
      width = 950 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  var formatYear = d3.time.format("'%y"),
      format = d3.time.format("%m/%d/%y"),
      bisectDate = d3.bisector(function(d) { return d.date; }).left,
      formatToMonth = d3.time.format("%B %Y"),
      formatPercent = d3.format(".1%"),
      formatVal = d3.format(".1f"),
      formatMonAbb = d3.time.format("%b. %Y"),
      formatMonAbb2 = d3.time.format("%b"),
      formatMonthOnly = d3.time.format("%b"),
      formatYearOnly = d3.time.format("%Y"),
      formatPercentChange = d3.format("+%"),
      formatChangeInWords = function (val) {
        var change =  100 - formatNumberWords(val);
        var str = change > 0 ? " percent less" : " percent more";
        if (change < 1 && change > -1 ) {
          return "about the same";
        };
        return (Math.abs(change) + str);
      },
      formatNumberWords = d3.format("0f"),
      formatPercentChange2 = function(d) { return d/100},
      formatFullYear = d3.time.format("%Y"),
      defaultCity = params.data[params.groups][0],
      currentCity,
      hoverCity,
      currentDateIndex,
      defaultDateIndex = 12, //TODO Calculate it!
      currentPriceTier = "val";

  var formatAxes = function(d) {
    var adj = d - 100;
    if (adj == 0) { return "Starting price"; }
    if (adj < 0) { return Math.abs(adj) + "% less"; }
    if (adj > 0) { return Math.abs(adj) + "% more"; }
  };

  var x = d3.time.scale()
      .range([0, width]);

  var y = d3.scale.log()
      .range([height, 20]);

  var barScale = d3.scale.linear()
      .range([0,75]);
      //set domain later with max
      //.domain([0,75]);

  var line = d3.svg.line()
      .x(function(d) { return x(d.date); })
      .y(function(d) { return y(d.adjustedVal); })
      .defined(function(d) { return !isNaN(d.adjustedVal); })

  var slider = d3.select(".g-chart").append("div")
      .attr("class", "g-slider")
      .style("width", width + "px")
      .style("margin-left", margin.left + "px");

  slider.append("div")
      .attr("class", "g-slider-tray")

  var sliderFill = slider.append("div")
      .attr("class", "g-slider-fill")

  var sliderHandle = slider.append("div")
      .attr("class", "g-slider-handle");

    sliderHandle.append("img")
      .attr("class", "g-slider-handle-icon")
      .attr("src", "libraries/widgets/nyt_home/css/handle@2x.png")

  var svg = d3.select(".g-chart").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .attr("class", "g-svg")
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("top")
      .ticks(d3.time.years)
      .tickSize(4)
      .tickPadding(2)
      .tickFormat(formatYear);

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left")
      .ticks(7)
//      .tickValues( [ 35, 50, 75, 100, 150, 200, 250] )
      .tickSize(-width - margin.left - margin.right)
      .tickFormat(formatAxes);

//  queue()
//      .defer(d3.csv, "http://graphics8.nytimes.com/newsgraphics/2013/05/28/case-shiller/2a8c44bdaf0703a2361add917782a6dd88c7d81e/lookup2.csv")
//      .defer(d3.csv, "http://graphics8.nytimes.com/newsgraphics/2013/05/28/case-shiller/2a8c44bdaf0703a2361add917782a6dd88c7d81e/case-shiller-tiered2.csv")
//      .await(ready)
//
//  function ready(err, lookup, data) {
    data = params.data;
    
    var dataArray = [];
    
    data[d3.keys(data)[0]].forEach(function(d,i) {
      var dataItem = {};
      d3.keys(data).forEach(function(dd) {
        if(dd === 'date'){
          dataItem[dd] = new Date(data[dd][i]);
        } else dataItem[dd] = data[dd][i];
      })
      dataArray.push(dataItem);
    });

    cityNameByKey = {};
    
    //if lookup is undefined just get key:key for each unique
    if (!(typeof(params.lookup) === 'undefined')) {
      lookup = params.lookup;
      lookup.forEach(function(d) {
        cityNameByKey[d.code] = d.city;
      });
    } else {
      lookup = d3.keys(d3.nest().key(function(d){return d[params.groups]}).map(dataArray));
      lookup.forEach(function(d) {
        cityNameByKey[d] = d;
      });
    };

    nested = d3.nest()
        .key(function(d) { return d[params.groups]; })
        .entries(dataArray);

    nested.forEach(function(city) {
      city.updatedMonth = city.values[nested[1].values.length-1].date;
      city.mostRecentValue = city.values[nested[1].values.length-1].val;
      city.maxVal = d3.max(city.values, function(d) { return d.val;});
      city.peakidx = city.values.map(function(d) { return d.val}).indexOf(city.maxVal);
      city.peakMonth = city.values.map(function(d) { return d.date})[city.peakidx];
      city.yearAgoDate = city.values[nested[1].values.length-13].date;
      city.yearAgoVal = city.values[nested[1].values.length-13].val;
      city.yearOnYearChange = (city.mostRecentValue - city.yearAgoVal) / city.yearAgoVal;
      city.changeFromPeak = (city.mostRecentValue - city.maxVal)/(city.maxVal);
      city.changeSinceBeginning = (city.mostRecentValue - city.values[0].val)/city.values[0].val;
      city.proper = cityNameByKey[city.key];
    });

    nested.sort(function(a,b) {
      return b.yearOnYearChange - a.yearOnYearChange;
    });
    
    x.domain(d3.extent(dataArray, function(d) { return d.date; }));
    y.domain([50,d3.max(dataArray, function(d){return d.val}) * 1.2]); 
    
    //set domains for each of the barScales
    barScale.domain([0,d3.max(nested,function(d){return Math.abs(d.changeSinceBeginning)})*100]);
    var indexFromMouseX = d3.scale.linear()
        .domain([0, width])
        .rangeRound([1, nested[1].values.length - 1])
        .clamp(true)

    svg.append("rect")
        .attr("class", "background")
        .attr("width", width)
        .attr("height", height);

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + 5 + ")")
        .call(xAxis)
      .selectAll("g")
        .classed("minor", function(d, i) { return d.getFullYear() % 1; })
        .filter(".minor")
      .select("line")
        .attr("y2", 2);

        d3.selectAll(".x.axis text").attr("dy", 20)

    // lines
    var linecontainer = svg.append("g")
        .classed("g-linecontainer", true);

    var screeny = svg.append("rect")
        .classed("g-screen", true)
        .attr("width", 0)
        .attr("height", height)
        .attr("x", 0 - margin.left);

    var yAxisMarker = svg.append("g")
        .attr("class", "y axis")
        .attr("transform", "translate(" + (0) + ",0)")
        .call(yAxis)
      .selectAll("g")
      .classed("minor", true)

        // .classed("minor", function(d,i) { return i !== 0; })
        .classed("g-baseline", function(d) { return d == 100 })
        // .classed("g-first", function(d,i) { return i == 0; })
      .select("text")
        .attr("x", 30)
        .attr("y", -5)
        .attr("dy", null);

    var lines = linecontainer.selectAll("path")
        .data(nested)
      .enter().append("path")
        .attr("class", (function(d) { return ( "g-city-line " + d.key)}) )
        .classed("g-highlight-line", function(d,i) { return d.key == currentCity});

    var hoverbar = svg.append("rect")
        .classed("g-hover-bar", true)
        .attr("width", 2)
        .attr("height", height)
        .attr("x", 0 - margin.left);

    var focus = svg.append("g")
        .attr("class", "focus")
        .attr("transform", "translate(" + x(nested[0].values[0].date) + ", " + y(100) + ")")

    focus.append("circle")
        .attr("r", 5)

    focus.append("text")
        .attr("x", 9)
        .attr("dy", ".35em");

    var currentMonth = slider.append("div")
        .classed("g-current-month", true);

    var mostRecentMonth = slider.append("div")
        .classed("g-most-recent-month", true)
        .html("...to <b>" + d3.time.format("%b %Y")(nested[0].updatedMonth) + "</b>");

    var endpoint = svg.append("g")
        .attr("class", "g-endpoint")
        .attr("transform", "translate(" + x(nested[0].values[nested[0].values.length-1].date) + ", " + y(100) + ")")

    endpoint.append("circle")
        .attr("r", 5);

    endpoint.append("text")
        .classed("g-end-label g-selected-city-endpoint-label", true)
        .attr("y", -45)
        .attr("x", - 0)
        .text("U.S. 20-city index")

    endpoint.append("text")
        .classed("g-end-label g-selected-city-endpoint-value", true)
        .attr("y", -20)
        .attr("x", - 0)
        .text("+12%")

    //
    //  Init Table
    //
    function initTable() {
      var rows = d3.select(".g-table").selectAll(".table-row")
          .data(nested)
        .enter()
          .append("tr")
          .attr("class", function(d) { return "g-table-row " + d.key + "-row"; })
          .classed("g-selected-row", function(d) { return d.key == "SPCSIND20"});

      var cityNames = rows.append("td")
          .text(function(d) { return d.proper; })
          .classed("g-proper-city", true);

      var yearlyChange = rows.append("td")
          .classed("g-num-td", true)
          .text(function(d) { return formatPercentChange(d.yearOnYearChange); });

      var yearlyChangeBarTd = rows.append("td")
          .classed("g-bar-td", true);

      var yearChangeBarContainer = yearlyChangeBarTd.append("div")
          .classed("g-bar-container", true);

      var changeBar = yearChangeBarContainer.append("div")
          .classed("g-yoy-bar", true)
             .style("width", function(d) {
                var chg = 100 * d.yearOnYearChange;
                return Math.abs(barScale(chg)).toString() + "px";
            })
            .style("left", function(d) {
               var chg = 100 * d.yearOnYearChange;
              if (chg<0) {
                var nudge = Math.abs(barScale(chg));
                return (barScale(barScale.domain()[1]) - nudge).toString() + "px";
              }
              else {
                return barScale(barScale.domain()[1]).toString() + "px";
              }
           });

      var zeroMarker3 = yearChangeBarContainer.append("div")
          .classed("g-zeromarker", true)
          .style("left", barScale(barScale.domain()[1]) + "px");

      var peakMonthTd = rows.append("td")
          .classed("g-num-td", true)
          .text(function(d) {
            return formatPercentChange(d.changeFromPeak);
          });

      var peakMonthBarTd = rows.append("td")
          .classed("g-bar-td", true);

      var peakMonthBarContainer = peakMonthBarTd.append("div")
          .classed("g-bar-container", true);

      var changeBar = peakMonthBarContainer.append("div")
          .classed("g-yoy-bar", true)
          .style("width", function(d) {
             var chg = 100 * d.changeFromPeak;
             return Math.abs(barScale(chg)).toString() + "px";
          })
          .style("left", function(d) {
             var chg = 100 * d.changeFromPeak;
            if (chg < 0) {
              var nudge = Math.abs(barScale(chg));
              return (barScale(barScale.domain()[1]) - nudge).toString() + "px";
            }
            else {
              return barScale(barScale.domain()[1]).toString() + "px";
            }
          });

      var zeroMarker2 = peakMonthBarContainer.append("div")
          .classed("g-zeromarker", true)
          .style("left", barScale(barScale.domain()[1]) + "px");

      var changeSinceSelectedTd = rows.append("td")
          .classed("g-change-since-selected-td g-num-td", true);

      var changeSelectedBarTD = rows.append("td")
          .classed("g-live-change-bar-td", true);

      var liveBarContainer = changeSelectedBarTD.append("div")
          .classed("g-live-bar-container", true);

      var liveChangeBar = liveBarContainer.append("div")
          .classed("g-live-bar", true);

      var zeroMarker = liveBarContainer.append("div")
          .classed("g-zeromarker", true)
          .style("left", barScale(barScale.domain()[1]) + "px");
    }

    initTable();

    //
    // Init Dropdowns
    //
    var dropDowns = d3.map();
    dropDowns.set("price", {
      class:".g-price-selector",
      data:[["an average priced", "val"], ["a low priced", "low"], ["a medium priced", "mid"], ["a high priced", "high"]],
      change: selectPrice

    });
    dropDowns.set("city", {
      class:".g-city-selector",
      data:nested.map(function(d) {
//
//        if(d.key == "SPCS20R") {
//          return ["a major city", d.key ];
//        }
//        else {
          return [cityNameByKey[d.key], d.key];
//
 //       }

      }).sort(),
      change: selectCity
    });
    dropDowns.set("date", {
      class:".g-date-selector",
      data:nested[0].values.map(function(d, i) { return [formatMonAbb(d.date), i]; }),
      change: selectDateWithIndex
    });

    dropDowns.forEach(function(key, d) {
      d.select = d3.select(d.class)
          .datum(d.data)
        .append("select")
          .on("change", function() { d.change(this.value); });

      d.select.selectAll("option")
          .data(function(d) { return d; })
        .enter().append("option")
          .text(function(d) { return d[0]; })
          .attr("value", function(d) { return d[1]; })
    });

    // change to 12 periods; need to generalize
    //NYT comments below
    // TODO make this find the 10-year index instead of hardcode 41 and animate it
    // selectDateWithIndex(1);
    selectCity(defaultCity);
    d3.transition()
        .duration(1000)
        .ease("out")
        .tween("intro", function() {
          return function(t) {
              selectDateWithIndex(Math.round(t * defaultDateIndex));
            };
        })

    //
    // Mouse Events
    //
    svg.on("mousemove", hover);
    svg.on("mouseout", function() {
      unHighlightCity();

      d3.select(".g-tooltip")
          .classed("g-hovering-tooltip", false)
    })

    slider.call(d3.behavior.drag()
        .on("dragstart", dragstarted)
        .on("drag", dragged));

    svg.on("click", function(d) {
      selectCity(hoverCity);
    });

    d3.selectAll(".g-table-row").on("click", function(d) {
      selectCity(d.key);
    }).on("mouseover", function(d) {
      highlightCity(d.key)
    }).on("mouseout", function(d) {
      unHighlightCity(d.key)
    });

    function selectPrice(priceKey) {
      if (currentPriceTier !== priceKey) {
        dropDowns.get("price").select.node().value = priceKey;
        currentPriceTier = priceKey;
        adjustData();
      }
    }

    function selectDateWithIndex(dateIndex) {
      if (currentDateIndex !== dateIndex) {
        currentDateIndex = dateIndex;
        dropDowns.get("date").select.node().value = currentDateIndex;
        adjustData();
      }
    }

    function selectCity(cityKey) {
      cityKey = cityKey ? cityKey : defaultCity;
      if (currentCity !== cityKey) {
        if (isNaN(nested.filter(function(d) { return d.key == cityKey; })[0].values[0][currentPriceTier])) selectPrice("val");
        dropDowns.get("price").select.property("disabled", isNaN(nested.filter(function(d) { return d.key == cityKey; })[0].values[0].low));
        dropDowns.get("city").select.node().value = cityKey;

        currentCity = cityKey;
        d3.selectAll(".g-city-line").classed("g-highlight-line", function(d) { return d.key == cityKey; });
        d3.selectAll(".g-table-row").classed("g-selected-row", function(d) { return d.key == cityKey; });
        d3.select("." + cityKey).moveToFront();
        d3.select(".g-selected-city-endpoint-label").text(cityNameByKey[cityKey])

        updateLabels();
      }
    }

    function updateLabels() {
      var obj = nested.filter(function(d) { return d.key == currentCity})[0]
      var lastVal = obj.values[obj.values.length-1].adjustedVal;
      d3.select(".g-answer").text(formatChangeInWords(lastVal));
      d3.select(".g-selected-city-endpoint-value").text(formatChangeInWords(lastVal))
      d3.select(".g-endpoint")
          .attr("transform", "translate(" + x(obj.values[obj.values.length-1].date) + ","+ y(lastVal)+")" );
    }

    function highlightCity(cityKey) {
      if (hoverCity !== cityKey) {

        hoverCity = cityKey;
        d3.selectAll(".g-city-line").classed("g-hover-line", function(d) { return d.key == cityKey; });
        d3.selectAll(".g-table-row").classed("g-hover-row", function(d) { return d.key == cityKey; });
      }
    }

    function unHighlightCity() {
      if (hoverCity !== null) {
        hoverCity = null;
        d3.selectAll(".g-city-line").classed("g-hover-line", false);
        d3.selectAll(".g-table-row").classed("g-hover-row", false);

        d3.select(".g-tooltip")
            .classed("g-hovering-tooltip", false)
      }
    }

    function dragstarted() {
      unHighlightCity();
      dragged();
      d3.event.sourceEvent.preventDefault();
    }

    function dragged() {
      selectDateWithIndex(indexFromMouseX(d3.mouse(svg.node())[0]));
    }

    function hover() {
      var m = d3.mouse(svg.node()),
          index = indexFromMouseX(m[0]),
          pct = y.invert(m[1]);

      var closestDifference = Infinity,
          closestIndex = -1,
          currentDifference;

      nested.forEach(function(d, i) {
        currentDifference = Math.abs(pct - d.values[index].adjustedVal);
        if (currentDifference < closestDifference) {
          closestDifference = currentDifference;
          closestIndex = i;
        }
      });

      if (closestDifference < 30) {
        highlightCity(nested[closestIndex].key);

        var m = d3.mouse(svg.node());
        d3.select(".g-tooltip")
            .classed("g-hovering-tooltip", true)
            .style("left", m[0] + "px")
            .style("top", m[1] + 70 + "px")
            .text(cityNameByKey[nested[closestIndex].key]);

        svg.style("cursor", "pointer");
      } else {
        svg.style("cursor", "inherit");

        unHighlightCity();
      }
    }

    function adjustData() {
      nested.forEach(function(d) {
        d.values.forEach(function(j) {
          j.adjustedVal = 100 * (j[currentPriceTier] / d.values[currentDateIndex][currentPriceTier]);
        })
      });

      lines.attr("d", function(d) { return line(d.values); } );

      var thisDate = nested[0].values[currentDateIndex].date,
          xPos = x(thisDate)

      var newpos = xPos < 100 ? 60 : (xPos - 40);
      // when xpos is less than 50, freeze it at 100
      d3.selectAll(".y.axis .tick.minor text")
        .attr("transform", "translate(" + newpos + ",0)")

      focus.attr("transform", "translate(" + (xPos - 2) + "," + y(100) + ")");

      d3.select(".g-date-compare")
          .text(function(d) { return ("Since " + nytMonths[formatMonthOnly(thisDate)] + " " + formatYearOnly(thisDate)   )})

      d3.select(".g-screen").attr("width", xPos + 10 );

      if (xPos) {};

      currentMonth
          .style("left", Math.min(Math.max(xPos - 160, 0), width - 320) + "px")
          .html(function(d) {  return "Price changes from <b>" + nytMonths[formatMonAbb2(thisDate)] + " " +  formatYearOnly(thisDate) +  "</b>..." });

      sliderFill.style("width",  (width - x(thisDate)) + "px" );

      sliderHandle.style("left", xPos + "px")

      d3.select(".g-hover-bar").attr("x", xPos - 2 );

      d3.selectAll(".g-change-since-selected-td")
          .text(function(d) {
            var current = d.values[d.values.length-1].val
            var compareVal = d.values[currentDateIndex].val;
            var chg = (current - compareVal ) / compareVal;
            return formatPercentChange(chg);
          });

      var thisCityObj = nested.filter(function(d) { return d.key == currentCity})[0];

      updateLabels();

      d3.selectAll(".g-live-bar")
          .style("width", function(d) {
              var current = d.values[d.values.length-1].val
              var compareVal = d.values[currentDateIndex].val;
              var chg = 100 * (current - compareVal ) / compareVal;
              return Math.abs(barScale(chg)).toString() + "px";
          })
          .style("left", function(d) {
            var current = d.values[d.values.length-1].val
            var compareVal = d.values[currentDateIndex].val;
            var chg = 100 * (current - compareVal ) / compareVal;

            if (chg < 0) {
              var nudge = Math.abs(barScale(chg));
              return (barScale(barScale.domain()[1]) - nudge).toString() + "px";
              // what fraction of the width in pixels is this?
              var nudge = starterBarWidth * Math.abs(chg)/100;
              return (starterBarWidth - nudge).toString() + "px";
            }
            else {
              return barScale(barScale.domain()[1]).toString() + "px";
            }
         });
    }
  //}

})()</script>

<h3>Thanks</h3>

<p>As I hope you can tell, this post was more a function of the efforts of others than of my own.</p>

<p>Thanks specifically:</p>

<ul>
<li>Ramnath Vaidyanathan for <a href="http://rcharts.io/site">rCharts</a> and <a href="http://slidify.org/">slidify</a>.</li>
<li>NYT Visualization Design Team for all their inspiring examples.</li>
<li>Google fonts <a href="http://www.google.com/fonts/specimen/Raleway">Raleway</a> and <a href="http://www.google.com/fonts/specimen/Oxygen">Oxygen</a></li>
</ul>

    </div>
        

  <script src="./nyt_interactive_files/bootstrap.min.js"></script>
  <script src="./nyt_interactive_files/plugins.js"></script>
  <script src="./nyt_interactive_files/main.js"></script>
  <!-- Load Javascripts for Widgets -->
  
  <!-- Google Prettify -->
  <script src="./nyt_interactive_files/prettify.js"></script>
  <script src="./nyt_interactive_files/lang-r.js"></script>
  <script>
    var pres = document.getElementsByTagName("pre");
    for (var i=0; i < pres.length; ++i) {
      pres[i].className = "prettyprint linenums";
    }
    prettyPrint();
  </script>
  <!-- End Google Prettify --> 
  </div></body></html>